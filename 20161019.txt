[context의 종류 5가지]

-Application
-Activity
-Service
-ContentProvider
-BroadcastReceiver

[POSTMAN에서 naver 검색 API사용]






AsyncTask : 비동기 작업

urlconnection to string


[getContentsURL블럭]

private static String getUrlContents(String theUrl)
  {
    StringBuilder content = new StringBuilder();

    // many of these calls can throw exceptions, so i've just
    // wrapped them all in one try/catch statement.
    try
    {
      // create a url object
      URL url = new URL(theUrl);

      // create a urlconnection object
      URLConnection urlConnection = url.openConnection();

      // wrap the urlconnection in a bufferedreader
      BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));

      String line;

      // read from the urlconnection via the bufferedreader
      while ((line = bufferedReader.readLine()) != null)
      {
        content.append(line + "\n");
      }
      bufferedReader.close();
    }
    catch(Exception e)
    {
      e.printStackTrace();
    }
    return content.toString();
  }
}

http://14.49.231.5/


 Log.i("URLConn", getUrlContents("http://naver.com"));

i는 info의 약자


AsyncTask는 세가지로 나뉜다
- onPreExecute() : Background 작업 시작전에 UI 작업을 진행 한다.
- doInBackground() : Background 작업을 진행 한다.
- nPostExecute() : Background 작업이 끝난 후 UI 작업을 진행 한다.

FLOW를 살펴 보자면,

[onPreExecute()] -> [doInBackground()] -> [onPostExecute()] 순서

alt + insert -> overrideMethod

시작전에 파라미터를 받을수 있고 진행중에 값을 넘겨줄수 있고 결과 값을 